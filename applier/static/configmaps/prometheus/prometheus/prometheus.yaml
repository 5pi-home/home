global:
  scrape_interval: 30s
  evaluation_interval: 30s
alerting:
  alertmanagers:
    - path_prefix: /
      static_configs:
      - targets:
          - alertmanager.d.42o.de
rule_files:
  - /etc/prometheus/*.rules

scrape_configs:
  - job_name: 'kubernetes-apiservers'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    static_configs:
      - targets:
          - kubernetes.default.svc:443

  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
    - role: node

    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
    - role: node

    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  # Scrape config for service endpoints.
  #
  # The relabeling allows the actual service scrape endpoint to be configured
  # via the following annotations:
  #
  # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
  # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
  # to set this to `https` & most likely set the `tls_config` of the scrape config.
  # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
  # * `prometheus.io/port`: If the metrics are exposed on a different port to the
  # service then set this appropriately.
  - job_name: 'kubernetes-service-endpoints'
    scrape_timeout: 30s # Mainly for kube-state-metrics

    kubernetes_sd_configs:
    - role: endpoints

    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: (.+)(?::\d+);(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: name

  # Scrape config for pods
  #
  # The relabeling allows the actual pod scrape endpoint to be configured via the
  # following annotations:
  #
  # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
  # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
  # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the
  # pod's declared ports (default is a port-free target if none are declared).
  - job_name: 'kubernetes-pods'

    kubernetes_sd_configs:
    - role: pod

    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: node

  - job_name: 'kubernetes-ingresses'

    metrics_path: /probe
    params:
      module: [http_non5xx]

    kubernetes_sd_configs:
    - role: ingress

    relabel_configs:
    - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
      regex: (.+);(.+);(.+)
      replacement: http://${2}${3}
      target_label: __param_target
    - target_label: __address__
      replacement: blackbox-exporter.d.42o.de
    - source_labels: [__param_target]
      target_label: instance
    - action: labelmap
      regex: __meta_kubernetes_ingress_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      target_label: namespace
    - source_labels: [__meta_kubernetes_ingress_name]
      target_label: name

  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
      - targets:
        - https://5pi.de
        - https://textkrieg.de
        - https://www.google.com
    relabel_configs: &relabel_config
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter.d.42o.de

  - job_name: 'blackbox-dns-google-eth0'
    metrics_path: /probe
    params:
      module: [dns_google_eth0]
    static_configs:
      - targets:
        - 1.1.1.1
        - 8.8.8.8
        - 8.8.4.4
    relabel_configs: *relabel_config

  - job_name: 'blackbox-dns-google-eth1'
    metrics_path: /probe
    params:
      module: [dns_google_eth1]
    static_configs:
      - targets:
        - 1.1.1.1
        - 8.8.8.8
        - 8.8.4.4
    relabel_configs: *relabel_config

  - job_name: 'blackbox-icmp-google-eth0'
    metrics_path: /probe
    params:
      module: [icmp_eth0]
    static_configs:
      - targets:
        - 1.1.1.1
        - 8.8.8.8
        - 8.8.4.4
    relabel_configs: *relabel_config

  - job_name: 'blackbox-icmp-google-eth1'
    metrics_path: /probe
    params:
      module: [icmp_eth1]
    static_configs:
      - targets:
        - 1.1.1.1
        - 8.8.8.8
        - 8.8.4.4
    relabel_configs: *relabel_config

  - job_name: 'blackbox-icmp-leases'
    metrics_path: /probe
    params:
      module: [icmp]
    file_sd_configs:
      - files:
        - /host/tmp/dhcp-prom.json
    relabel_configs: *relabel_config

  - job_name: 'prosafe'
    metrics_path: /probe
    static_configs:
      - targets:
        - "sw-living"
        - "sw-office"
    relabel_configs: &relabel_config
      - source_labels: [__address__]
        target_label: __param_target
        replacement: "$1:*"
      - source_labels: [__address__]
        target_label: instance
      - target_label: __address__
        replacement: prosafe-exporter.d.42o.de
